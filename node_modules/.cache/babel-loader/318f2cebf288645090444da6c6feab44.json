{"ast":null,"code":"var _jsxFileName = \"/Users/alisa.tkaczyk/Desktop/ghc-workshop/react-workshop-front-end/src/components/PostQuote.js\";\nimport React, { Component } from \"react\";\nimport \"./counter.css\";\n\nclass PostQuote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputQuote: \"\"\n    };\n\n    this.postQuote = event => {\n      event.preventDefault();\n      const inputQuote = this.state.inputQuote;\n\n      if (inputQuote !== \"\") {\n        // fetch(\"https://example.com/profile\", {\n        //   method: \"POST\", // or 'PUT'\n        //   headers: {\n        //     \"Content-Type\": \"application/json\"\n        //   },\n        //   body: JSON.stringify(inputQuote)\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        this.props.updatePostedQuotes(inputQuote); //     console.log(\"Success:\", data);\n\n        this.setState({\n          inputQuote: \"\"\n        }); //   })\n        //   .catch(error => {\n        //     console.error(\"Error:\", error);\n        //   });\n      }\n    };\n\n    this.onInputChange = event => {\n      let inputQuote = event.target.value;\n      this.setState({\n        inputQuote\n      });\n      console.log(this.props.postedQuotes);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.postQuote,\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"POST Quote\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"submit a quote:\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      onChange: this.onInputChange,\n      value: this.state.inputQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), this.props.postedQuotes.length > 0 && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Your submitted quotes:\"), this.props.postedQuotes.map((quote, index) => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, quote))));\n  }\n\n}\n\nexport default PostQuote;","map":{"version":3,"sources":["/Users/alisa.tkaczyk/Desktop/ghc-workshop/react-workshop-front-end/src/components/PostQuote.js"],"names":["React","Component","PostQuote","constructor","props","state","inputQuote","postQuote","event","preventDefault","updatePostedQuotes","setState","onInputChange","target","value","console","log","postedQuotes","render","length","map","quote","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAHW;;AAAA,SAKnBC,SALmB,GAKPC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMH,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;;AACA,UAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKF,KAAL,CAAWM,kBAAX,CAA8BJ,UAA9B,EAVqB,CAWrB;;AACA,aAAKK,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAE;AAAd,SAAd,EAZqB,CAcrB;AACA;AACA;AACA;AACD;AACF,KA3BkB;;AAAA,SA6BnBM,aA7BmB,GA6BHJ,KAAK,IAAI;AACvB,UAAIF,UAAU,GAAGE,KAAK,CAACK,MAAN,CAAaC,KAA9B;AACA,WAAKH,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,YAAvB;AACD,KAjCkB;AAElB;;AAiCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKX,SAAtB;AAAiC,MAAA,SAAS,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,QAAQ,EAAE,KAAKK,aAHjB;AAIE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,UAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQG,KAAKF,KAAL,CAAWa,YAAX,CAAwBE,MAAxB,GAAiC,CAAjC,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATJ,EAWG,KAAKf,KAAL,CAAWa,YAAX,CAAwBG,GAAxB,CAA4B,CAACC,KAAD,EAAQC,KAAR,KAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAJ,CADD,CAXH,CAJF,CADF;AAsBD;;AA3D+B;;AA8DlC,eAAenB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./counter.css\";\n\nclass PostQuote extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = { inputQuote: \"\" };\n\n  postQuote = event => {\n    event.preventDefault();\n    const inputQuote = this.state.inputQuote;\n    if (inputQuote !== \"\") {\n      // fetch(\"https://example.com/profile\", {\n      //   method: \"POST\", // or 'PUT'\n      //   headers: {\n      //     \"Content-Type\": \"application/json\"\n      //   },\n      //   body: JSON.stringify(inputQuote)\n      // })\n      //   .then(response => response.json())\n      //   .then(data => {\n      this.props.updatePostedQuotes(inputQuote);\n      //     console.log(\"Success:\", data);\n      this.setState({ inputQuote: \"\" });\n\n      //   })\n      //   .catch(error => {\n      //     console.error(\"Error:\", error);\n      //   });\n    }\n  };\n\n  onInputChange = event => {\n    let inputQuote = event.target.value;\n    this.setState({ inputQuote });\n    console.log(this.props.postedQuotes);\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.postQuote} className=\"button\">\n          POST Quote\n        </button>\n        <div>\n          <label>submit a quote:</label>\n          <input\n            type=\"text\"\n            className=\"input\"\n            onChange={this.onInputChange}\n            value={this.state.inputQuote}\n          />\n          {this.props.postedQuotes.length > 0 && (\n            <h3>Your submitted quotes:</h3>\n          )}\n          {this.props.postedQuotes.map((quote, index) => (\n            <p>{quote}</p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostQuote;\n"]},"metadata":{},"sourceType":"module"}