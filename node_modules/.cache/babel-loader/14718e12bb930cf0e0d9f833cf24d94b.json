{"ast":null,"code":"var _jsxFileName = \"/Users/alisa.tkaczyk/Desktop/ghc-workshop/react-workshop-front-end/src/components/Counter.js\";\nimport React, { Component } from \"react\";\nimport GetQuote from \"./GetQuote\";\nimport PostQuote from \"./PostQuote\";\nimport \"./counter.css\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recievedQuotes: [],\n      postedQuotes: [],\n      inputQuote: \"\",\n      author: \"\"\n    };\n\n    this.getQuote = () => {\n      fetch(`https://jsonplaceholder.typicode.com/todos/1`).then(response => response.json()).then(result => {\n        console.log(result);\n        console.log(this.state.recievedQuotes);\n        this.setState(prevState => ({\n          recievedQuotes: [result, ...prevState.recievedQuotes]\n        }));\n      });\n    };\n\n    this.postQuote = event => {\n      event.preventDefault();\n      const inputQuote = {\n        inputQuote: this.state.inputQuote,\n        author: this.state.author\n      };\n      fetch(\"https://example.com/profile\", {\n        method: \"POST\",\n        // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(inputQuote)\n      }).then(response => response.json()).then(data => {\n        console.log(\"Success:\", data);\n        this.setState({\n          inputQuote: \"\"\n        });\n      }).catch(error => {\n        console.error(\"Error:\", error);\n      });\n    };\n\n    this.updateInputQuote = event => {\n      let inputQuote = event.target.value;\n      this.setState({\n        inputQuote\n      });\n      console.log(this.state.inputQuote);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(GetQuote, {\n      getQuote: this.getQuote,\n      recievedQuotes: this.state.recievedQuotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(PostQuote, {\n      onChange: this.updateInputQuote,\n      postQuote: this.postQuote,\n      postedQuotes: this.state.postedQuotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/alisa.tkaczyk/Desktop/ghc-workshop/react-workshop-front-end/src/components/Counter.js"],"names":["React","Component","GetQuote","PostQuote","Counter","state","recievedQuotes","postedQuotes","inputQuote","author","getQuote","fetch","then","response","json","result","console","log","setState","prevState","postQuote","event","preventDefault","method","headers","body","JSON","stringify","data","catch","error","updateInputQuote","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AAAEC,MAAAA,cAAc,EAAE,EAAlB;AAAsBC,MAAAA,YAAY,EAAE,EAApC;AAAwCC,MAAAA,UAAU,EAAE,EAApD;AAAwDC,MAAAA,MAAM,EAAE;AAAhE,KADsB;;AAAA,SAG9BC,QAH8B,GAGnB,MAAM;AACfC,MAAAA,KAAK,CAAE,8CAAF,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,cAAvB;AACA,aAAKY,QAAL,CAAcC,SAAS,KAAK;AAC1Bb,UAAAA,cAAc,EAAE,CAACS,MAAD,EAAS,GAAGI,SAAS,CAACb,cAAtB;AADU,SAAL,CAAvB;AAGD,OARH;AASD,KAb6B;;AAAA,SAe9Bc,SAf8B,GAelBC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMd,UAAU,GAAG;AACjBA,QAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWG,UADN;AAEjBC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAFF,OAAnB;AAKAE,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCY,QAAAA,MAAM,EAAE,MAD2B;AACnB;AAChBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF0B;AAKnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,UAAf;AAL6B,OAAhC,CAAL,CAOGI,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQgB,IAAI,IAAI;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,IAAxB;AACA,aAAKV,QAAL,CAAc;AAAEV,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD,OAXH,EAYGqB,KAZH,CAYSC,KAAK,IAAI;AACdd,QAAAA,OAAO,CAACc,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,OAdH;AAeD,KArC6B;;AAAA,SAuC9BC,gBAvC8B,GAuCXV,KAAK,IAAI;AAC1B,UAAIb,UAAU,GAAGa,KAAK,CAACW,MAAN,CAAaC,KAA9B;AACA,WAAKf,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWG,UAAvB;AACD,KA3C6B;AAAA;;AA6C9B0B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKxB,QADjB;AAEE,MAAA,cAAc,EAAE,KAAKL,KAAL,CAAWC,cAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,KAAKyB,gBADjB;AAEE,MAAA,SAAS,EAAE,KAAKX,SAFlB;AAGE,MAAA,YAAY,EAAE,KAAKf,KAAL,CAAWE,YAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF;AAiBD;;AA/D6B;;AAkEhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GetQuote from \"./GetQuote\";\nimport PostQuote from \"./PostQuote\";\nimport \"./counter.css\";\n\nclass Counter extends Component {\n  state = { recievedQuotes: [], postedQuotes: [], inputQuote: \"\", author: \"\" };\n\n  getQuote = () => {\n    fetch(`https://jsonplaceholder.typicode.com/todos/1`)\n      .then(response => response.json())\n      .then(result => {\n        console.log(result);\n        console.log(this.state.recievedQuotes);\n        this.setState(prevState => ({\n          recievedQuotes: [result, ...prevState.recievedQuotes]\n        }));\n      });\n  };\n\n  postQuote = event => {\n    event.preventDefault();\n    const inputQuote = {\n      inputQuote: this.state.inputQuote,\n      author: this.state.author\n    };\n\n    fetch(\"https://example.com/profile\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(inputQuote)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Success:\", data);\n        this.setState({ inputQuote: \"\" });\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  updateInputQuote = event => {\n    let inputQuote = event.target.value;\n    this.setState({ inputQuote });\n    console.log(this.state.inputQuote);\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"column\">\n          <GetQuote\n            getQuote={this.getQuote}\n            recievedQuotes={this.state.recievedQuotes}\n          />\n        </div>\n        <div className=\"column\">\n          <PostQuote\n            onChange={this.updateInputQuote}\n            postQuote={this.postQuote}\n            postedQuotes={this.state.postedQuotes}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}